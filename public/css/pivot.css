body {
  margin: 0;
  font-family: "Alegreya Sans",sans-serif;
  font-size: 16px;
  text-decoration: none;
  height: 100%;
}
div, ol, ul, li, a, img, form, label, input, iframe {
  position: relative;
  display: inline-block;
  /*float: left;*/
  margin-left: 0;
  margin-right: 0;
  margin-top: 0;
  margin-bottom: 0;
  padding-left: 0;
  padding-right: 0;
  padding-top: 0;
  padding-bottom: 0;
  /*height: 100%;  can't use this because setting it back to auto doesn't work when we need it*/
  /*width: 100%;*/
  background-position: center;
  background-size: cover;
  border: none;
  list-style: none;
}
label:hover {
  cursor: pointer;
}

/* basic layout */
#pagecontent {
  width: 100%;
  min-height: 100%;
  text-align: center;
}
#pagecontent::before {
  content: "";
  display: inline-block;
  height: 169px;
  width: 100%;
  background-color: #4dd0e1;
}
#ballotdiv {
  height: 100%;
  width: 100%;
  max-width: 1000px;
  top: -169px;
  float: none;
  font-weight: 100;
}
.ballotheader {
  height: 90px;
  width: 100%;
  color: white;
  font-size: 34px;
  text-align: left;
  line-height: 90px;
  font-family: sans-serif;
}

/* step navigator */
.stepNavigator {
  width: 100%;
  text-align: center;
}
.stepNavigator > a {
  float: none;
  padding: 10px 40px 0px 40px;
  margin: 4px -2px 10px -2px;
  font-size: 18px;
  color: black;
}
.stepNavigator > a[href] {
  color: white;
}
.stepNavigator > a::before {
  content: '';
  position: absolute;
  top: -6px;
  left: 50%;
  right:auto;
  transform: translateX(-50%);
  /*background-color: #009faf;*/
  background-color: white;
  width: 100%;
  height: 5px;
}
.stepNavigator > a:nth-of-type(1)::before {
  left: 50%;
  transform: none;
  width: 50%;
}
.stepNavigator > a:nth-last-of-type(1)::before {
  left: 0%;
  transform: none;
  width: 50%;
}
.stepNavigator > a::after {
  content: '';
  position: absolute;
  top: -14px;
  left: 50%;
  right:auto;
  transform: translateX(-50%);
  background-color: black;
  border-radius: 50%;
  width: 20px;
  height: 20px;
}
.stepNavigator > a[href]::after {
  background-color: white;
}

/* ballot layout and skin */
.ballotspace {
  box-sizing: border-box;
  padding: 10px;
  width: 100%;
  background-color: #eeeeee;
  text-align: center;
  box-shadow: -3px 3px 4px lightgrey;
  border-radius: 2px;
}
#ballotspaceheader {
  width: 100%;
  padding-top: 16px;
  line-height: 30px;
  font-size: 20px;
  color: #3b3b3b;
}
#rankeditems,
#unrankeditems {
  box-sizing: border-box;
  width: 100%;
  padding: 20px;
  margin-top: 10px;
  min-height: 50px;
}
#rankeditems::before,
#unrankeditems::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  border: 2px solid #aaaaaa;
}
#rankeditems::after,
#unrankeditems::after {
  content: "Unranked (tied for last)";
  position: absolute;
  font-size: 17px;
  top: -7px;
  left: 10px;
  background-color: #eeeeee;
  padding: 0 5px 0 5px;
}
#rankeditems::after {
  content: "Ranked";
}
#unrankeditems .candidateDetails {
  opacity: .7;
}
.candidate {
  box-sizing: border-box;
  width: 100%;
  height: 48px;
  /*min-height: 48px;*/
  padding: 10px;
}
.candidateDetails {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 110px;
  right: 0;
  background-color: white;
  box-shadow: 2px 2px 4px lightgrey;
  border-radius: 2px;
  font-family: arial;
  line-height: 47px;
  font-size: 15px;
  font-weight: 400;
  text-align: left;
  overflow: hidden;
}
.candidateDescription {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 25px;
  right: 100px;
  color: #5d5d5d;
}
.candidateCost {
  position: absolute;
  box-sizing: border-box;
  top: 0;
  bottom: 0;
  width: 100px;
  right: 0;
  padding: 0 5px 0 5px;
  color: #d53e3e;
}
/*https://codepen.io/zachariab/pen/wkrbc*/
.grippy {
  position: absolute;
  content: '....';
  width: 10px;
  height: 30px;
  display: inline-block;
  overflow: hidden;
  line-height: 6px;
  padding: 3px 4px;
  cursor: move;
  vertical-align: middle;
  font-size: 19px;
  font-family: sans-serif;
  letter-spacing: 2px;
  color: #cccccc;
  top: 3px;
  left: 2px;
}
.grippy::after {
  content: '.. .. .. ..';
}
#unrankeditems > .candidate {
  cursor: pointer;
}
#rankeditems > .candidate,
.grippy,
.grabby {
  cursor: move;
  cursor: grab;
  cursor: -moz-grab;
  cursor: -webkit-grab;
}

/* rank tie and banish display */
#unrankeditems > .candidate > .rankingTools {
  display: none;
}
.rankingTools {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  /*height: 100%;*/
  width: 110px;
  /*display: table;*/
  text-align: left;
  /*background-color: blue;*/
}
.rankdisplay {
  position: absolute;
  top: 0;
  bottom: 0;
  /*left: 43px;*/
  right: 2px;
  /*height: 100%;*/
  line-height: 47px;
  width: 47px;
  font-size: 18px;
  background-color: #009faf;
  color: #fff;
  box-shadow: -2px 2px 4px lightgrey;
  text-align: center;
}
.rankdisplay::before {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
}
/*.rankingTools:not(.ballotreview):hover .rankdisplay {*/
.check:hover + .rankdisplay,
.rankdisplay:hover {
  display: none;
}
.rankingTools > input {
  /*position: absolute;*/
  height: 100%;
  width: 45px;
  /*transform: scale(1.5);*/
  cursor: pointer;
}
.tie,
.banish {
  display: none;
  height: 100%;
  width: 33%;
  text-align: center;
  cursor: pointer;
}
label.check {
  position: absolute;
  box-sizing: border-box;
  height: 100%;
  width: 45px;
  top: 0;
  right: 0;
}
label.check::before,
label.check::after {
    content: "";
    position: absolute;
    top: 25%;
    bottom: 25%;
    left: 25%;
    right: 25%;
    /*border: 2px solid #009faf;*/
    border: 2px solid #4dd0e1;
    border-radius: 3px;
}
label.check::before {
  background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="50.04999923706055 37.630001068115234 99.89999389648438 81.08000183105469" width="99.89999389648438" height="81.08000183105469"><path d=" M 87.37 81.17 C 102.21 66.90 116.49 52.06 131.18 37.63 C 137.62 43.64 143.71 50.00 149.95 56.22 C 129.15 77.10 108.36 97.99 87.41 118.71 C 75.03 106.14 62.43 93.79 50.05 81.22 C 56.29 75.00 62.38 68.64 68.82 62.63 C 75.06 68.75 81.20 74.97 87.37 81.17 Z" transform="matrix(1, 0, 0, 1, -1.7763568394002505e-15, 0)" fill="rgba(0, 159, 175, 1)"/></svg>');
  /*background: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='61' height='41' fill='@{bgColor}' stroke='none'><path d='M0,0 L30,40 L60,0 L0,0 Z'></path></svg>") no-repeat;*/
  background-color: #fff;
  background-position: center;
  background-repeat: no-repeat;
  background-size: contain;
  overflow: hidden;
}
label.check::after {
  background-color: white;
  opacity: 1;
}
label.check:hover::after {
  opacity: .75;
}
.tie::before,
.banish::before {
  content: "";
  position: absolute;
  top: 25%;
  bottom: 25%;
  left: 25%;
  right: 25%;
  background-position: center;
  background-repeat: no-repeat;
  background-size: contain;
}
.banish::before {
  background-image: url('data:image/svg+xml;utf8,<svg viewBox="74.98812866210938 49.971858978271484 66.72299194335938 66.70027160644531" width="66.72299194335938" height="66.70027160644531" xmlns="http://www.w3.org/2000/svg"><path fill="rgba(0,0,0,1)" d=" M 76.14 54.07 C 78.58 49.65 85.19 48.57 88.82 52.16 C 95.47 58.26 101.45 65.08 108.12 71.17 C 115.55 65.34 121.35 57.68 128.55 51.58 C 133.25 47.72 141.11 51.28 141.60 57.26 C 142.37 61.74 138.58 64.93 135.75 67.75 C 130.58 72.92 125.29 77.96 120.26 83.27 C 125.42 88.93 131.04 94.14 136.43 99.57 C 139.20 102.22 142.48 105.53 141.55 109.75 C 140.77 115.73 132.74 118.95 128.21 114.80 C 121.28 108.59 115.19 101.49 108.27 95.26 C 101.74 101.40 95.70 108.04 89.18 114.20 C 86.49 116.97 81.92 117.51 78.73 115.29 C 74.90 112.89 73.71 107.13 76.58 103.55 C 82.69 96.36 90.32 90.55 96.17 83.13 C 90.22 76.64 83.66 70.75 77.61 64.36 C 74.88 61.75 74.10 57.33 76.14 54.07 Z" transform="matrix(1, 0, 0, 1, -1.7763568394002505e-15, 0)"/></svg>');
}
.tie::before {
  background-image: url('data:image/svg+xml;utf8,<svg viewBox="50.00421142578125 62.44163513183594 100.000732421875 75.09085083007812" width="100.000732421875" height="75.09085083007812" xmlns="http://www.w3.org/2000/svg"><path fill="rgba(0,0,0,1)" d="M 71.4 50.52 C 76.77 48.82 83.02 51.31 85.78 56.2 C 87.56 59.13 87.52 62.68 87.55 66 C 87.43 89.68 87.57 113.36 87.48 137.03 C 87.61 141.81 84.99 146.58 80.62 148.66 C 75.42 151.41 68.48 149.74 65.02 145.01 C 62.76 142.2 62.44 138.47 62.46 135.01 C 62.56 111 62.44 86.98 62.51 62.97 C 62.27 57.41 66 51.99 71.4 50.52 Z M 121.4 50.52 C 126.76 48.82 133.01 51.31 135.78 56.2 C 137.56 59.13 137.52 62.69 137.55 66.01 C 137.43 89.68 137.57 113.36 137.48 137.04 C 137.61 141.82 134.98 146.58 130.62 148.66 C 125.42 151.41 118.48 149.74 115.02 145.01 C 112.76 142.2 112.44 138.47 112.46 135.01 C 112.56 110.99 112.44 86.98 112.51 62.97 C 112.27 57.41 116 51.99 121.4 50.52 Z" transform="matrix(0, 1, -1, 0, 199.99163818359375, -0.017517000436782837)"/></svg>');
}
.tie:hover::before {
  background-image: url('data:image/svg+xml;utf8,<svg viewBox="50.00421142578125 62.44163513183594 100.000732421875 75.09085083007812" width="100.000732421875" height="75.09085083007812" xmlns="http://www.w3.org/2000/svg"><path fill="rgb(170, 170, 170,1)" d="M 71.4 50.52 C 76.77 48.82 83.02 51.31 85.78 56.2 C 87.56 59.13 87.52 62.68 87.55 66 C 87.43 89.68 87.57 113.36 87.48 137.03 C 87.61 141.81 84.99 146.58 80.62 148.66 C 75.42 151.41 68.48 149.74 65.02 145.01 C 62.76 142.2 62.44 138.47 62.46 135.01 C 62.56 111 62.44 86.98 62.51 62.97 C 62.27 57.41 66 51.99 71.4 50.52 Z M 121.4 50.52 C 126.76 48.82 133.01 51.31 135.78 56.2 C 137.56 59.13 137.52 62.69 137.55 66.01 C 137.43 89.68 137.57 113.36 137.48 137.04 C 137.61 141.82 134.98 146.58 130.62 148.66 C 125.42 151.41 118.48 149.74 115.02 145.01 C 112.76 142.2 112.44 138.47 112.46 135.01 C 112.56 110.99 112.44 86.98 112.51 62.97 C 112.27 57.41 116 51.99 121.4 50.52 Z" transform="matrix(0, 1, -1, 0, 199.99163818359375, -0.017517000436782837)"/></svg>');
  /*color: #aaaaaa;*/
}
.banish:hover::before {
  background-image: url('data:image/svg+xml;utf8,<svg viewBox="74.98812866210938 49.971858978271484 66.72299194335938 66.70027160644531" width="66.72299194335938" height="66.70027160644531" xmlns="http://www.w3.org/2000/svg"><path fill="rgba(255,0,0,1)" d=" M 76.14 54.07 C 78.58 49.65 85.19 48.57 88.82 52.16 C 95.47 58.26 101.45 65.08 108.12 71.17 C 115.55 65.34 121.35 57.68 128.55 51.58 C 133.25 47.72 141.11 51.28 141.60 57.26 C 142.37 61.74 138.58 64.93 135.75 67.75 C 130.58 72.92 125.29 77.96 120.26 83.27 C 125.42 88.93 131.04 94.14 136.43 99.57 C 139.20 102.22 142.48 105.53 141.55 109.75 C 140.77 115.73 132.74 118.95 128.21 114.80 C 121.28 108.59 115.19 101.49 108.27 95.26 C 101.74 101.40 95.70 108.04 89.18 114.20 C 86.49 116.97 81.92 117.51 78.73 115.29 C 74.90 112.89 73.71 107.13 76.58 103.55 C 82.69 96.36 90.32 90.55 96.17 83.13 C 90.22 76.64 83.66 70.75 77.61 64.36 C 74.88 61.75 74.10 57.33 76.14 54.07 Z" transform="matrix(1, 0, 0, 1, -1.7763568394002505e-15, 0)"/></svg>');
}
input[type=checkbox] {
  display: none;
}
.rankingTools > input:checked ~ .tie,
.rankingTools > input:checked ~ .banish {
  display: inline-block;
}
.rankingTools > input:checked ~ .rankdisplay {
  display: none;
}
.rankingTools > input:checked ~ label.check::after {
  opacity: 0;
}
/*hide rankingTools box when dragging*/
.candidate.gu-mirror > .rankingTools {
  display: none;
}

/* rank counting (FUNCTIONAL) */
/* increment the rank with each candidate by default */
#rankeditems > .candidate {
  counter-increment: rank;
}
/* do not increment the rank for gu-transit items that fall after a tied item, nor the ranks for items within a tie that fall after a gu-transit item, since they might not be coming from a tie */
#rankeditems > .candidate[data-tie] + .gu-transit,
#rankeditems > .candidate.gu-transit + [data-tie="middle"],
#rankeditems > .candidate.gu-transit + [data-tie="end"],
#rankeditems > .candidate[data-tie] + [data-tie] {
  counter-increment: none;
}
#rankeditems > .candidate[data-tie] + [data-tie="start"]:not(.gu-transit),
/* increment the rank for gu-transit items that fall right after the end of a tie */
#rankeditems > .candidate[data-tie="end"] + .gu-transit {
  counter-increment: rank;
}
/* actually show the count */
#rankeditems > .candidate > .rankingTools > .rankdisplay::before {
  content: counter(rank);
}
